function [history,x,fval,algoptions] = algorithm_bps(algo,algoset,probstruct)

algoptions = bps('defaults');                   % Get default settings

algoptions.MaxFunEvals = probstruct.MaxFunEvals;
algoptions.TolFun = probstruct.TolFun;          % Standard TolFun
algoptions.TrueMinX = probstruct.TrueMinX;
algoptions.OptimToolbox = [];                    % Use Optimization Toolbox
% algoptions.Plot = 'scatter';

newflag = 0;
switch algoset
    case {0,'debug'}; algoset = 'debug'; algoptions.Debug = 1; algoptions.Plot = 'scatter';
    case {1,'base'}; algoset = 'base';           % Use defaults
    % case {1,'base'}; algoset = 'base'; algoptions.HedgeGamma = 0.125; algoptions.gpRescalePoll = 1; algoptions.AcqHedge = 0; algoptions.FitnessShaping = 0; algoptions.PollAcqFcn = @acqNegPI; algoptions.SearchAcqFcn = @acqNegEI; algoptions.SearchMethod = {@searchWCMscale,1}; % Use defaults
    case {2,'matern'}; algoset = 'matern'; algoptions.gpdefFcn = {@gpdefStationaryNew,'matern5',1};
    case {3,'hedge'}; algoset = 'base'; algoptions.AcqHedge = 1;
    case {4,'hedge0'}; algoset = 'base'; algoptions.AcqHedge = 1; algoptions.HedgeGamma = 0;
    case {5,'mads'}; algoset = 'mads'; algoptions.SearchMethod = {@searchWCMmultiscale,1,1}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5;
    case {6,'mads2'}; algoset = 'mads2'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {7,'mads3'}; algoset = 'mads3'; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = 'max(50, 10*nvars)'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {8,'mads4'}; algoset = 'mads4'; algoptions.AccelerateMesh = 1; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {9,'mads5'}; algoset = 'mads5'; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {10,'mads6'}; algoset = 'mads6'; algoptions.gpMethod = 'grid'; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {11,'mads7'}; algoset = 'mads7'; algoptions.gpMethod = 'grid'; algoptions.Nsearch = 8192; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {12,'mads8'}; algoset = 'mads8'; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearch = 8192; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchWCMmultiscale,1,1},{@searchWCMmultiscale,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {13,'mads8es'}; algoset = 'mads8es'; algoptions.ESstart = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 4; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {14,'mads8es2'}; algoset = 'mads8es2'; algoptions.ESstart = 0.5; algoptions.ESbeta = '10/nvars'; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 4; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {15,'mads8es3'}; algoset = 'mads8es3'; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 4; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {16,'mads8es4'}; algoset = 'mads8es4'; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {17,'mads8es5'}; algoset = 'mads8es5'; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 4; algoptions.Nsearch = 8192; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {18,'mads8es4ei'}; algoset = 'mads8es4ei'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {19,'mads8es4ei2'}; algoset = 'mads8es4ei2'; algoptions.gpMeanPercentile = 75; algoptions.gpMeanRangeFun = '@(ym,y) (prctile(y,90) - prctile(y,10))/2'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {20,'mads8es4eib'}; algoset = 'mads8es4eib'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {21,'mads8es5ei'}; algoset = 'mads8es5'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 4; algoptions.Nsearch = 8192; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {22,'mads8es4eic'}; algoset = 'mads8es4eic'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {23,'mads8es4eid'}; algoset = 'mads8es4eid'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {24,'mads8es4eie'}; algoset = 'mads8es4eie'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {25,'mads8es4eif'}; algoset = 'mads8es4eif'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {26,'mads8es4eig'}; algoset = 'mads8es4eig'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {27,'mads8es4eih'}; algoset = 'mads8es4eih'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {28,'mads8es4eii'}; algoset = 'mads8es4eii'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {29,'mads8es4eij'}; algoset = 'mads8es4eij'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {30,'mads8es4eihess'}; algoset = 'mads8es4eihess'; algoptions.gpMarginalize = 1; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '50 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {31,'mads8es4eihplus'}; algoset = 'mads8es4eih'; algoptions.PollAcqFcn = @acqNegEI; algoptions.ESstart = 0.25; algoptions.ESbeta = 1; algoptions.UseEffectiveRadius = 1; algoptions.gpMethod = 'grid'; algoptions.Nsearchiter = 2; algoptions.Nsearch = 4096; algoptions.gpRescalePoll = 1; algoptions.AccelerateMesh = 1; algoptions.AccelerateMeshSteps = 3; algoptions.MinRefitTime = '2*nvars'; algoptions.DoubleRefit = 0; algoptions.Ndata = '100 + 10*nvars'; algoptions.TolStallIters = '4 + floor(nvars/2)'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,2,1}}}; algoptions.SkipPollAfterSearch = 1; algoptions.MinFailedPollSteps = Inf; algoptions.PollMeshMultiplier = 4; algoptions.SearchGridNumber = 5; algoptions.SearchNtry = 'max(nvars,floor(3+nvars/2))';
    case {32,'base2'}; algoset = 'base2'; algoptions.CholAttempts = 6;
    case {33,'base3'}; algoset = 'base3'; algoptions.NoiseNudge = [2 0];
    case {34,'base4'}; algoset = 'base4'; 
    case {35,'base5'}; algoset = 'base5'; algoptions.SearchMeshExpand = 4;
    case {36,'base6'}; algoset = 'base6'; algoptions.SearchMeshExpand = 4; algoptions.SearchMeshIncrement = 0.25;
    case {37,'base7'}; algoset = 'base7'; algoptions.SearchMeshExpand = 20; algoptions.SearchMeshIncrement = 1;
    case {38,'base8'}; algoset = 'base8'; algoptions.SearchMeshExpand = 10; algoptions.SearchMeshIncrement = 0.25;
    case {39,'base9'}; algoset = 'base9'; algoptions.SearchMeshExpand = 20; algoptions.SearchMeshIncrement = 0.5;
    case {40,'base10'}; algoset = 'base10'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchNewton}}}; algoptions.HessianUpdate = 1;
    case {41,'base11'}; algoset = 'base11'; algoptions.HessianUpdate = 1; % algoptions.SearchNtry = 0; algoptions.Ninit = 0;
    case {42,'base4bis'}; algoset = 'base4bis';
    case {43,'bads'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1}}}; algoptions.HessianUpdate = 1;
    case {44,'badsnewton'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchNewton}}}; algoptions.HessianUpdate = 1;
    case {45,'bads2'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchES,2,1}}}; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'naive'; % algoptions.Nsearch = 2^13; algoptions.Nsearchiter = 4;
    case {46,'badsnosearch'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.HessianUpdate = 1; algoptions.SearchNtry = 0; algoptions.HessianMethod = 'naive';
    case {47,'nosearch'}; algoset = 'bads'; algoptions.SearchNtry = 0;        
    case {48,'sigma2'}; algoset = 'sigma5'; algoptions.IncumbentSigmaMultiplier = 0.2;
    case {49,'bads2alt'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchES,2,1}}}; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'naive'; algoptions.HessianAlternate = 0; % algoptions.Nsearch = 2^13; algoptions.Nsearchiter = 4;
    case {50,'bads3'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchES,2,1}}}; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'neighborhood'; algoptions.gpMethod = 'covgrid';
    case {51,'badscma'}; algoset = 'badscma'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchCMA,1}; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'cmaes'; algoptions.TolMesh = 1e-8; % algoptions.Nsearch = 2^13; algoptions.Nsearchiter = 4;
    case {52,'bads4'}; algoset = 'bads'; algoptions.PollMethod = @pollBADS2N; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchES,2,1}}}; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'hessian'; algoptions.gpMethod = 'covgrid'; algoptions.RotateGP = 1;
    case {53,'base4tris'}; algoset = 'base4tris'; % Reduced noise in searchES-1
    case {54,'nosloppy'}; algoset = 'bads'; algoptions.SloppyImprovement = 0; algoptions.SearchGridNumber = 10;
    case {55,'slow'}; algoset = 'slow'; algoptions.PollMeshMultiplier = 2; algoptions.SearchGridNumber = 10;
    case {56,'base4tetris'}; algoset = 'base4tetris'; % Just to check that everything is equal
    case {57,'base4noproj'}; algoset = 'base4noproj'; % Do not project within bounds
    case {58,'base4new'}; algoset = 'base4new'; % Fixed many things
    case {59,'realmads'}; algoset = 'realmads'; algoptions.SearchGridNumber = 8; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Fixed many things        
    case {60,'realmads2'}; algoset = 'realmads2'; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Fixed many things        
    case {61,'realmads3'}; algoset = 'realmads3'; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Fixed many things        
    case {62,'realmads4'}; algoset = 'realmads4'; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Modified gpHyperOptimize        
    case {64,'realmads5'}; algoset = 'realmads5'; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Decresed bound on hyp.lik noise        
    case {65,'realmads5eqi'}; algoset = 'realmads5eqi'; algoptions.PollAcqFcn = {@acqNegEQI,0.9}; algoptions.SearchAcqFcn = {@acqNegEQI,0.9}; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % By mistake it just did standard EI (but with different bounds on noise)        
    case {66,'realmads6'}; algoset = 'realmads6'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N;        
    case {67,'realmads7'}; algoset = 'realmads7'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Increased to 200 samples per LHS (more uniform, changed a couple of minor things)        
    case {68,'realmads8'}; algoset = 'realmads8'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % LHS further improved        
    case {69,'realmads9'}; algoset = 'realmads9'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Like 8 but fixed periodic variables        
    case {70,'realmads10'}; algoset = 'realmads10'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 4; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Like 8 but fixed periodic variables        
    case {71,'realmads11'}; algoset = 'realmads11'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Check that everything is fine with this version
    case {72,'realmads12'}; algoset = 'realmads12';
    case {73,'realmads13'}; algoset = 'realmads13'; algoptions.Ninit = '10 + 2*nvars';
    case {74,'realmads14'}; algoset = 'realmads14'; algoptions.CacheSize = 1e4;
    case {75,'realmads15'}; algoset = 'realmads15'; algoptions.gpdefFcn = {@gpdefStationaryNew,'matern5',1}; algoptions.TolMesh = 1e-8; algoptions.Nsearch = 2^14; algoptions.Niter = 8; 
    case {76,'negsqei'}; algoset = 'negsqei'; algoptions.PollAcqFcn = {@acqNegSqEI}; algoptions.SearchAcqFcn = {@acqNegSqEI};
    case {77,'gei'}; algoset = 'gei'; algoptions.PollAcqFcn = {@acqNegGEI}; algoptions.SearchAcqFcn = {@acqNegGEI};
    case {85,'hess'}; algoset = 'hess'; algoptions.SearchMethod = {@searchHedge,{{@searchES,1,1},{@searchES,4,1},{@searchES,2,1}}}; algoptions.gpMethod = 'covgrid'; algoptions.RotateGP = 1; algoptions.HessianUpdate = 1; algoptions.HessianMethod = 'neighborhood'; algoptions.InitFcn = @initSobol; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Check that everything is fine with this version
    %case {70,'largeinit'}; algoset = 'largeinit'; algoptions.BufferNdata = Inf; algoptions.MinNdata = '30 + 2*nvars'; algoptions.Ninit = '20 + 4*nvars'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Like 8 but fixed periodic variables        
    %case {71,'noinit'}; algoset = 'noinit'; algoptions.BufferNdata = Inf; algoptions.MinNdata = '30 + 2*nvars'; algoptions.Ninit = '0'; algoptions.InitFcn = @initLHS; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Like 8 but fixed periodic variables        
    case {98,'realmadsx'}; algoset = 'realmads9'; algoptions.BufferNdata = Inf; algoptions.MinNdata = '30 + 2*nvars'; algoptions.MaxPollGridNumber = 0; algoptions.NoiseNudge = [1 0]; algoptions.SearchGridNumber = 10; algoptions.RemovePointsAfterTries = 1; algoptions.SearchSizeLocked = 1; algoptions.SearchGridMultiplier = 2; algoptions.PollMeshMultiplier = 2; algoptions.PollMethod = @pollMADS2N; % Decresed bound on hyp.lik noise        
    case {99,'base99'}; algoset = 'base99'; algoptions.gpdefFcn = {@gpdefStationaryNew,'rq',[1,0]};
    case {100,'noisy'}; algoset = 'noisy'; algoptions.UncertaintyHandling = 1;
    case {200,'shaping'}; algoset = 'shaping'; algoptions.FitnessShaping = 1; algoptions.Plot = 'profile'; algoptions.Debug = 1; algoptions.Nsearch = 2^12; algoptions.Nsearchiter = 2;
    otherwise
        error(['Unknown algorithm setting ''' algoset ''' for algorithm ''' algo '''.']);
end

% Increase base noise with noisy functions
if ~isempty(probstruct.Noise) || probstruct.IntrinsicNoisy
    algoptions.UncertaintyHandling = 'on';
    NoiseEstimate = probstruct.NoiseEstimate;
    if isempty(NoiseEstimate); NoiseEstimate = 1; end    
    algoptions.NoiseSize = NoiseEstimate;
end

% Variables with periodic boundary
if isfield(probstruct, 'PeriodicVars')
    algoptions.PeriodicVars = probstruct.PeriodicVars;
end

% Variables are already rescaled by BENCHMARK
algoptions.NonlinearScaling = 0;

PLB = probstruct.InitRange(1,:);
PUB = probstruct.InitRange(2,:);
LB = probstruct.LowerBound;
UB = probstruct.UpperBound;
x0 = probstruct.InitPoint;
D = size(x0,2);

if newflag
    [x,fval,exitFlag,output] = ...
        bps_new(@(x) benchmark_func(x,probstruct),x0,LB,UB,PLB,PUB,algoptions);
else
    xx = []; yy = []; hyp = [];
    go = 1;
    while go
        [x,fval,exitFlag,output,funValues,gpstruct] = ...
            bps(@(x) benchmark_func(x,probstruct),x0,LB,UB,PLB,PUB,algoptions);    
         % algoptions.FunValues = funValues;         
         if 0
             xx = [xx; funValues.X];
             yy = [yy; funValues.Y];
             algoptions2 = algoptions;
             algoptions2.Ninit = 0;
             algoptions2.NoiseSize = exp(gpstruct.hyp.cov(end));

             x = max(min(x + randn().*exp(gpstruct.hyp.cov(1:D)')./exp(gpstruct.hyp.cov(end)),UB),LB);
            [x,fval,exitFlag,output,funValues,gpstruct] = ...
                bps(@(x) benchmark_func(x,probstruct),x,LB,UB,PLB,PUB,algoptions2);             
             %[x0,~,gpstruct] = multibayes(xx,yy,PLB,PUB,hyp);
             %hyp = gpstruct.hyp;
         end
         go = 0;
    end
end
history = benchmark_func(); % Retrieve history
history.scratch = output;

% Clean output files
trashfile = [pwd filesep 'glsinput.mat']; 
if exist(trashfile, 'file'); delete(trashfile); end